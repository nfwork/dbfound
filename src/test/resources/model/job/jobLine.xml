<?xml version="1.0" encoding="UTF-8"?>
<model xmlns="http://dbfound.googlecode.com/model" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dbfound.googlecode.com/model https://raw.githubusercontent.com/nfwork/dbfound/master/tags/model.xsd">

	<query pagerSize="10">
		<param name="user_code" dataType="varchar" scope="session" />
		<sql>
		  <![CDATA[
			SELECT
			    title,
			    l.line_id,
				class_id,
				t.header_id,
				(select c.class_name from fnd_class c where c.class_id = t.class_id) class_name,
			    course_id,
			    T.status status_code,
			    (select  concat(concat(b.branch_code,'-'),b.branch_name) from fnd_branch b,fnd_course c where b.branch_id = c.branch_id and c.course_id= t.course_id) course_name,
				(SELECT  code_name  FROM sys_code SC where SC.code='JOB_STATUS' and SC.code_value= t.status) status_name,
				end_time,
				(select teacher_name from fnd_teacher te where te.teacher_id = t.teacher_id) teacher_name,
				(select count(1) from sys_upload_file f where f.table_name ='job_headers' and pk_value = t.header_id) att_num,
				t.last_update_by,
				DATE_FORMAT(t.create_date,'%Y-%m-%d') create_date,
				DATE_FORMAT(t.last_update_date,'%Y-%m-%d') last_update_date,
			    (select CONCAT(CONCAT(user_code,'-'),user_name) from sys_user where user_id =t.last_update_by) last_update_user
			FROM job_headers t ,job_lines l
			where t.header_id= l.header_id
			 and l.status = 'NEW'
			 and l.student_id=(SELECT student_id FROM fnd_student s WHERE s.student_code = ${@user_code})
			 #AND_CLAUSE#
			order by t.create_date desc
		   ]]>
		</sql>
		<filter name="timefrom" express="t.create_date &gt;= ${@timefrom}  " />
		<filter name="timeto" express="t.create_date &lt;= ${@timeto} " />
		<filter name="class_id" express="class_id = ${@class_id} " />
		<filter name="course_id" express="course_id = ${@course_id} " />
		<filter name="status_code" express="t.status = ${@status_code} " />
		<filter name="title" express="title like ${@title} " />
	</query>

	<query name="query_all">
		<param name="user_code" dataType="varchar" scope="session" />
		<sql>
		  <![CDATA[
			SELECT
			    title,
			    l.line_id,
				class_id,
				t.header_id,
				(select c.class_name from fnd_class c where c.class_id = t.class_id) class_name,
			    course_id,
			    T.status status_code,
			    (select  concat(concat(b.branch_code,'-'),b.branch_name) from fnd_branch b,fnd_course c where b.branch_id = c.branch_id and c.course_id= t.course_id) course_name,
				(SELECT  code_name  FROM sys_code SC where SC.code='JOB_STATUS' and SC.code_value= t.status) status_name,
				(SELECT  code_name  FROM sys_code SC where SC.code='JOB_LINE_STATUS' and SC.code_value= l.status) line_status_name,
				end_time,
				(select teacher_name from fnd_teacher te where te.teacher_id = t.teacher_id) teacher_name,
				(select count(1) from sys_upload_file f where f.table_name ='job_headers' and pk_value = t.header_id) att_num,
				t.last_update_by,
				DATE_FORMAT(t.create_date,'%Y-%m-%d') create_date,
				DATE_FORMAT(t.last_update_date,'%Y-%m-%d') last_update_date,
			    (select CONCAT(CONCAT(user_code,'-'),user_name) from sys_user where user_id =t.last_update_by) last_update_user
			FROM job_headers t ,job_lines l
			where t.header_id= l.header_id
			 and l.student_id=(SELECT student_id FROM fnd_student s WHERE s.student_code = ${@user_code})
			  #AND_CLAUSE#
			order by t.create_date desc
		   ]]>
		</sql>
		<filter name="timefrom" express="t.create_date &gt;= ${@timefrom}  " />
		<filter name="timeto" express="t.create_date &lt;= ${@timeto} " />
		<filter name="class_id" express="class_id = ${@class_id} " />
		<filter name="course_id" express="course_id = ${@course_id} " />
		<filter name="status_code" express="t.status = ${@status_code} " />
		<filter name="title" express="title like ${@title} " />
	</query>

	<execute name="init">
		<param name="user_code" dataType="varchar" scope="session" />
		<param name="user_id" dataType="number" scope="session" />
		<param name="header_id" dataType="varchar" />
		<param name="line_id" UUID="true" />
		<param name="student_id" dataType="number" />
		<sqls>
			<batchSql
				cursor="SELECT h.header_id,
				              (SELECT student_id FROM fnd_student s WHERE s.student_code = ${@user_code}) student_id
						FROM job_headers h
					   WHERE h.status != 'NEW'
					     AND NOT EXISTS(SELECT
					                     1
					                   FROM job_lines l,
					                     fnd_student s
					                   WHERE l.student_id = s.student_id
					                       AND l.header_id = h.header_id
					                       AND s.student_code = ${@user_code})
					     AND h.class_id = (SELECT
					                        s.class_id
					                      FROM fnd_student s
					                      WHERE s.student_code = ${@user_code}) ">
				<executeSql>
				   <![CDATA[
					INSERT INTO job_lines
						(line_id,
						header_id,
						student_id,
						status,
						create_by,
						last_update_by,
						create_date,
						last_update_date)
					VALUES (${@line_id},
					    ${@header_id},
					    ${@student_id},
					    'NEW',
						${@user_id},
						${@user_id},
						NOW(),
						NOW())
					 ]]>
				</executeSql>
			</batchSql>
		</sqls>
	</execute>

</model>